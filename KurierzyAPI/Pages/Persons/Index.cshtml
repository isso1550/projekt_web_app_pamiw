@page
@model KurierzyAPI.Pages.Persons.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Email")
            </th>
            <th>
                @Html.DisplayName("Name")
            </th>
            <th>
                @Html.DisplayName("Surname")
            </th>
            <th>
                @Html.DisplayName("Birthday")
            </th>
            <th>
                @Html.DisplayName("City")
            </th>
            <th>
                @Html.DisplayName("passwordHash")
            </th>
            <th>
                @Html.DisplayName("Role")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

    </tbody>
</table>

<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Person.Id" />
    <div class="form-group">
        <label asp-for="Person.Email" class="control-label"> Email (contains)</label>
        <input asp-for="Person.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Person.Name" class="control-label"> Name (contains)</label>
        <input asp-for="Person.Name" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Person.Surname" class="control-label"> Surname (contains)</label>
        <input asp-for="Person.Surname" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Person.Birthday" class="control-label"> Birthday (higher than)</label>
        <input asp-for="Person.Birthday" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Person.City" class="control-label"> City (contains)</label>
        <input asp-for="Person.City" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Person.RoleId" class="control-label"> RoleId (match)</label>
        <input asp-for="Person.RoleId" class="form-control" />
    </div>
    <div class="form-group">
        <label class="control-label"> Count </label>
        <input class="form-control" />
    </div>
    <div class="form-group">
        <label class="control-label"> Page </label>
        <input class="form-control" />
    </div>
    <div class="form-group">
        <input type="submit" value="Filter" class="btn btn-primary" />
    </div>
</form>

<script>
    function button_redirect (id) {
        location.href = '/persons/edit?id=' + id.toString();
    }
    function button_delete(id){
        if (confirm("Are you sure?") == true) {
            console.log("Delete request for id " +id.toString() );
            token = localStorage.getItem("token");
            token = "Bearer " + token;

            $.ajax({
                url: '/api/persons/' + id.toString(),
                type: 'DELETE',
                headers: {"Authorization" : token},
                complete: function (xhr, textStatus) {
                    if (xhr.status == 200) {
                        alert("Deleted");
                        location.reload();
                    } else {
                        alert(xhr.responseText);
                    }
                }

            })
        } else {
            return;
        }
    }
    const xhttp = new XMLHttpRequest();
    xhttp.onload = function () {
        var json = JSON.parse(this.responseText)
        let mainTable = document.getElementsByClassName("table")[0];
        for (var i = 0; i < json.length; i++) {
            console.log(i);
            let newRow = mainTable.insertRow(-1);

            for (var value of ['Email','Name','Surname','Birthday','City','passwordHash','RoleId']){
                var newCell = newRow.insertCell(-1);
                var newText = document.createTextNode(json[i][value]);
                newCell.appendChild(newText)
            }
            newCell = newRow.insertCell(-1);
            var newLink = document.createElement("button");
            newLink.innerHTML = "Modify";
            newLink.onclick = button_redirect.bind(null,json[i]['Id']);
            newCell.appendChild(newLink);

            newCell = newRow.insertCell(-1);
            var newDelete = document.createElement("button");
            newDelete.innerHTML = "Delete";
            newDelete.onclick = button_delete.bind(null, json[i]['Id']);
            newCell.appendChild(newDelete);
            
        }
    }
    xhttp.open("GET", "/api/persons");
    xhttp.send();

    document.getElementsByClassName("form-group")[3].getElementsByTagName("input")[0].value = "0001-01-01T00:00";
    document.getElementsByClassName("form-group")[5].getElementsByTagName("input")[0].value = -1;
    document.getElementsByClassName("form-group")[6].getElementsByTagName("input")[0].value = -1;
    document.getElementsByClassName("form-group")[7].getElementsByTagName("input")[0].value = -1;
    document.addEventListener('submit', (e) => {
        modifyDTO = {
            "Email": document.getElementsByClassName("form-group")[0].getElementsByTagName("input")[0].value,
            "Name": document.getElementsByClassName("form-group")[1].getElementsByTagName("input")[0].value,
            "Surname": document.getElementsByClassName("form-group")[2].getElementsByTagName("input")[0].value,
            "Birthday": document.getElementsByClassName("form-group")[3].getElementsByTagName("input")[0].value,
            "City": document.getElementsByClassName("form-group")[4].getElementsByTagName("input")[0].value,
            "RoleId": parseInt(document.getElementsByClassName("form-group")[5].getElementsByTagName("input")[0].value),
            "Count": parseInt(document.getElementsByClassName("form-group")[6].getElementsByTagName("input")[0].value),
            "Page": parseInt(document.getElementsByClassName("form-group")[7].getElementsByTagName("input")[0].value)
        }
        e.preventDefault();
        $.ajax({
            url: '/api/filter/persons',
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            data: JSON.stringify(modifyDTO),
            complete: function (xhr, textStatus) {
                if (xhr.status == 200) {
                    //usun stare wyniki
                    var rows = document.getElementsByTagName("tr");
                    for (var i = 1; i < rows.length; i){
                        rows[i].remove();
                    }
                    //dodaj nowe wyniki (to samo co get)
                    var json = JSON.parse(xhr.responseText)
                    let mainTable = document.getElementsByClassName("table")[0];
                    for (var i = 0; i < json.length; i++) {
                        console.log(i);
                        let newRow = mainTable.insertRow(-1);

                        for (var value of ['Email', 'Name', 'Surname', 'Birthday', 'City', 'passwordHash', 'RoleId']) {
                            var newCell = newRow.insertCell(-1);
                            var newText = document.createTextNode(json[i][value]);
                            newCell.appendChild(newText)
                        }
                        newCell = newRow.insertCell(-1);
                        var newLink = document.createElement("button");
                        newLink.innerHTML = "Modify";
                        newLink.onclick = button_redirect.bind(null, json[i]['Id']);
                        newCell.appendChild(newLink);

                        newCell = newRow.insertCell(-1);
                        var newDelete = document.createElement("button");
                        newDelete.innerHTML = "Delete";
                        newDelete.onclick = button_delete.bind(null, json[i]['Id']);
                        newCell.appendChild(newDelete);

                    }
                    
                } else {
                    alert(xhr.responseText);
                }
            }

        })
    });
</script>